variables:
  USE_HARD_LINKS: 'false'
  FF_USE_FASTZIP: 'true'
  TRANSFER_METER_FREQUENCY: 2s
  ARTIFACT_COMPRESSION_LEVEL: 'fastest'
  CACHE_COMPRESSION_LEVEL: 'fastest'
  DOCKER_DRIVER: overlay2

# Windows runners
.koii-windows-runner:
  tags:
    - koii-desktop-node-runner

stages:
  - prepare
  - checks
  - package

####################################################################################################
######################################## TEMPLATES #################################################
####################################################################################################

.brew_template: &brew
  before_script:
    - HOMEBREW_NO_AUTO_UPDATE=1 HOMEBREW_NO_INSTALL_CLEANUP=1 HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK=1 brew uninstall node@17
    - HOMEBREW_NO_AUTO_UPDATE=1 HOMEBREW_NO_INSTALL_CLEANUP=1 HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK=1 brew install node@18
    - export PATH="/usr/local/opt/node@18/bin:$PATH"
    - export LDFLAGS="-L/usr/local/opt/node@18/lib"
    - export CPPFLAGS="-I/usr/local/opt/node@18/include"

.npm_ci_template: &npm_ci
  stage: prepare
  interruptible: true
  rules:
    - if: '$CI_COMMIT_TAG'
      when: always
    - if: '$CI_MERGE_REQUEST_ID'
      when: always
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
      when: always
  script:
    - npm config set -- //gitlab.com/api/v4/packages/npm/:_authToken=$GITLAB_ACCESS_TOKEN
    - npm config set @koii-network:registry https://gitlab.com/api/v4/packages/npm/
    - npm ci --cache npm_cache --prefer-offline --no-audit --progress=false
  cache:
    - key: npm
      policy: pull-push
      paths:
        - npm_cache/
    - key: node_modules-${CI_COMMIT_REF_SLUG}
      policy: push
      paths:
        - node_modules/
        - release/app/node_modules/
        - src/node_modules/
  # artifacts:
  #   name: 'artifacts'
  #   untracked: false
  #   expire_in: 10 mins
  #   paths:
  #     - node_modules/
  #     - release/app/node_modules/
  #     - src/node_modules/

.lint_template: &lint
  stage: checks
  interruptible: true
  allow_failure: true
  rules:
    - if: '$CI_COMMIT_TAG'
      when: never
    - if: '$CI_MERGE_REQUEST_ID'
      when: always
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
      when: always
  script:
    - npm run lint
  cache:
    - key: npm
      policy: pull
      paths:
        - npm_cache/
    - key: node_modules-${CI_COMMIT_REF_SLUG}
      policy: pull
      paths:
        - node_modules/
        - release/app/node_modules/
        - src/node_modules/

.test_template: &test
  stage: checks
  interruptible: true
  allow_failure: false
  rules:
    - if: '$CI_COMMIT_TAG'
      when: never
    - if: '$CI_MERGE_REQUEST_ID'
      when: always
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
      when: always
  script:
    - npm run test
  cache:
    - key: npm
      policy: pull
      paths:
        - npm_cache/
    - key: node_modules-${CI_COMMIT_REF_SLUG}
      policy: pull
      paths:
        - node_modules/
        - release/app/node_modules/
        - src/node_modules/

.package_template: &package
  #when: on_success
  interruptible: true
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
      when: always
  stage: package
  cache:
    - key: npm
      policy: pull
      paths:
        - npm_cache/
    - key: node_modules-${CI_COMMIT_REF_SLUG}
      policy: pull
      paths:
        - node_modules/
        - release/app/node_modules/
        - src/node_modules/

####################################################################################################
######################################## PREPARE ###################################################
####################################################################################################

install_win:
  extends:
    - .koii-windows-runner
  <<: *npm_ci

install_linux:
  image: $LINUX_IMAGE
  <<: *npm_ci
  tags:
    - koii-linux

install_macos:
  <<: *npm_ci
  tags:
    - koii-macos

install_macos_intel:
  <<: *npm_ci
  tags:
    - koii-macos-intel

####################################################################################################
########################################## TEST ####################################################
####################################################################################################

lint_win:
  extends:
    - .koii-windows-runner
  needs: ['install_win']
  dependencies:
    - install_win
  <<: *lint

lint_linux:
  image: $LINUX_IMAGE
  needs: ['install_linux']
  dependencies:
    - install_linux
  <<: *lint
  tags:
    - koii-linux

lint_macos:
  image: $MACOS_IMAGE
  needs: ['install_macos']
  dependencies:
    - install_macos
  <<: *lint
  tags:
    - koii-macos

test_win:
  extends:
    - .koii-windows-runner
  needs: ['install_win']
  dependencies:
    - install_win
  <<: *test

test_linux:
  image: $LINUX_IMAGE
  needs: ['install_linux']
  dependencies:
    - install_linux
  <<: *test
  tags:
    - koii-linux

test_macos:
  needs: ['install_macos']
  dependencies:
    - install_macos
  before_script:
    - chmod +x node_modules/.bin/*
  <<: *test
  tags:
    - koii-macos

####################################################################################################
######################################## PACKAGE ###################################################
####################################################################################################

package_win:
  extends:
    - .koii-windows-runner
  <<: *package
  script:
    - npm run release -- -w

package_linux:
  image: $LINUX_IMAGE
  <<: *package
  before_script:
    - apt-get update && apt-get install rpm -y
  script:
    - npm run release
  tags:
    - koii-linux

package_macos:
  <<: *package
  before_script:
    - chmod +x node_modules/.bin/*
  script:
    - npm run release
  tags:
    - koii-macos

package_macos_intel:
  <<: *package
  before_script:
    - chmod +x node_modules/.bin/*
  script:
    - npm run release
  tags:
    - koii-macos-intel
